; ModuleID = 'mila'
source_filename = "mila"

declare i32 @writeln(i32)

declare i32 @write(i32)

declare i32 @readln(ptr)

define i32 @facti(i32 %0) {
entry:
  %1 = alloca i32, align 4
  store i32 %0, ptr %1, align 4
  %2 = alloca i32, align 4
  store i32 0, ptr %2, align 4
  %3 = load i32, ptr %2, align 4
  store i32 1, ptr %2, align 4
  br label %4

4:                                                ; preds = %9, %entry
  %5 = load i32, ptr %1, align 4
  %6 = icmp ugt i32 %5, 1
  %7 = zext i1 %6 to i32
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = load i32, ptr %2, align 4
  %11 = load i32, ptr %2, align 4
  %12 = load i32, ptr %1, align 4
  %13 = mul i32 %11, %12
  store i32 %13, ptr %2, align 4
  %14 = load i32, ptr %1, align 4
  %15 = sub i32 %14, 1
  store i32 %15, ptr %1, align 4
  br label %4

16:                                               ; preds = %4
  br label %17

17:                                               ; preds = %16
  %18 = load i32, ptr %2, align 4
  ret i32 %18
}

define i32 @factr(i32 %0) {
entry:
  %1 = alloca i32, align 4
  store i32 %0, ptr %1, align 4
  %2 = alloca i32, align 4
  store i32 0, ptr %2, align 4
  %3 = load i32, ptr %1, align 4
  %4 = icmp eq i32 %3, 1
  %5 = zext i1 %4 to i32
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %entry
  %8 = load i32, ptr %2, align 4
  store i32 1, ptr %2, align 4
  br label %16

9:                                                ; preds = %entry
  %10 = load i32, ptr %2, align 4
  %11 = load i32, ptr %1, align 4
  %12 = load i32, ptr %1, align 4
  %13 = sub i32 %12, 1
  %14 = call i32 @factr(i32 %13)
  %15 = mul i32 %11, %14
  store i32 %15, ptr %2, align 4
  br label %16

16:                                               ; preds = %9, %7
  br label %17

17:                                               ; preds = %16
  %18 = load i32, ptr %2, align 4
  ret i32 %18
}

define i32 @main() {
entry:
  %0 = alloca i32, align 4
  store i32 0, ptr %0, align 4
  %1 = call i32 @facti(i32 5)
  %2 = call i32 @writeln(i32 %1)
  %3 = call i32 @factr(i32 5)
  %4 = call i32 @writeln(i32 %3)
  br label %5

5:                                                ; preds = %entry
  %6 = load i32, ptr %0, align 4
  ret i32 %6
}
