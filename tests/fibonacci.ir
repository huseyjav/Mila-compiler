; ModuleID = 'mila'
source_filename = "mila"

declare i32 @writeln(i32)

declare i32 @write(i32)

declare i32 @readln(ptr)

define i32 @fibonacci(i32 %0) {
entry:
  %1 = alloca i32, align 4
  store i32 %0, ptr %1, align 4
  %2 = alloca i32, align 4
  store i32 0, ptr %2, align 4
  %3 = load i32, ptr %1, align 4
  %4 = icmp slt i32 %3, 2
  %5 = zext i1 %4 to i32
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %entry
  %8 = load i32, ptr %1, align 4
  store i32 %8, ptr %2, align 4
  br label %17

9:                                                ; preds = %entry
  %10 = load i32, ptr %1, align 4
  %11 = sub i32 %10, 1
  %12 = call i32 @fibonacci(i32 %11)
  %13 = load i32, ptr %1, align 4
  %14 = sub i32 %13, 2
  %15 = call i32 @fibonacci(i32 %14)
  %16 = add i32 %12, %15
  store i32 %16, ptr %2, align 4
  br label %17

17:                                               ; preds = %9, %7
  br label %18

18:                                               ; preds = %17
  %19 = load i32, ptr %2, align 4
  ret i32 %19
}

define i32 @main() {
entry:
  %0 = alloca i32, align 4
  store i32 0, ptr %0, align 4
  %1 = call i32 @fibonacci(i32 8)
  %2 = call i32 @writeln(i32 %1)
  %3 = call i32 @fibonacci(i32 9)
  %4 = call i32 @writeln(i32 %3)
  br label %5

5:                                                ; preds = %entry
  %6 = load i32, ptr %0, align 4
  ret i32 %6
}
